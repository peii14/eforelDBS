generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model companyProfile {
  company_id       Int    @id @default(autoincrement())
  company_name     String
  company_address  String
  company_city     String
  company_province String @db.VarChar(7)
  company_poscode  String @db.VarChar(20)
  company_phone    String

  company_userID Int  @unique
  user           user @relation(fields: [company_userID], references: [user_id])
}

// redundancy on mcode q code area
// create feat super admin can create admin
model user {
  user_id       Int       @id @default(autoincrement())
  user_created  DateTime  @default(now())
  user_updated  DateTime? @updatedAt
  user_fullname String
  user_email    String    @unique
  user_area     Int
  user_code     String    @db.Char(2)
  user_password String    @db.LongText
  user_isAdmin  Boolean   @default(false)

  // user_salesActivity Int
  // salesActivity      SalesActivity @relation(fields: [user_salesActivity], references: [salesActivity_user])

  companyProfile companyProfile?
}

model SalesActivity {
  salesActivity_id       Int      @id @default(autoincrement())
  salesActivity_date     DateTime
  salesActivity_followup String   @db.VarChar(20)
  salesActivity_jobDesc  String   @db.VarChar(100)

  salesActivity_customerID Int      @unique
  customer                 Customer @relation(fields: [salesActivity_customerID], references: [customer_id])
}

model Customer {
  customer_id         Int    @id @default(autoincrement())
  customer_name       String @db.VarChar(50)
  customer_code       String @db.VarChar(10)
  customer_salesCode  String @db.Char(2)
  customer_address    String @db.VarChar(100)
  customer_province   String @db.VarChar(100)
  customer_city       String @db.VarChar(50)
  customer_postalCode String @db.VarChar(10)
  customer_phone      String @db.VarChar(20)

  customer_verticalMarketID Int
  VerticalMarket            VerticalMarket @relation(fields: [customer_verticalMarketID], references: [verticalMarket_id])

  salesActivity SalesActivity[]
  PIC           PIC[]
  Quotation     Quotation[]
  // VerticalMarket VerticalMarket[]
}

model PIC {
  pic_id         Int         @id @default(autoincrement())
  pic_name       String      @db.VarChar(50)
  pic_position   String      @db.VarChar(50)
  pic_email      String      @db.VarChar(50)
  pic_phone      String      @db.VarChar(20)
  pic_sales_code String      @db.Char(2)
  // Quotation_Q_ID   Int       @unique
  // Quotation        Quotation @relation(fields: [Quotation_Q_ID], references: [Q_ID])
  pic_customerID Int
  customer       Customer    @relation(fields: [pic_customerID], references: [customer_id])
  Quotation      Quotation[]
}

model Quotation {
  quotation_id       Int    @id @default(autoincrement())
  quotation_num      String @db.VarChar(50)
  quotation_value    String @db.VarChar(50)
  quotation_product  String @db.VarChar(50)
  quotation_quantity Int

  quotation_customerID Int
  customer             Customer @relation(fields: [quotation_customerID], references: [customer_id])

  quotation_PIC_ID Int?
  PIC              PIC?           @relation(fields: [quotation_PIC_ID], references: [pic_id])
  MOP              MOP?
  SalesPipeline    SalesPipeline?
}

model MOP {
  mop_id    Int    @id @default(autoincrement())
  mop_num   String @db.VarChar(50)
  mop_value String @db.VarChar(50)

  mop_quotationID Int       @unique
  Quotation       Quotation @relation(fields: [mop_quotationID], references: [quotation_id])
}

model SalesPipeline {
  salesPipeline_id              Int    @id @default(autoincrement())
  salesPipeline_date            String
  salesPipeline_closeEstimation String
  salesPipeline_salesCode       String @db.Char(2)
  salesPipeline_projectName     String @db.VarChar(50)
  salesPipeline_product         String @db.VarChar(50)
  salesPipeline_quantity        Int
  salesPipeline_status          String @db.VarChar(5)
  salesPipeline_closeDate       String
  salesPipeline_note            String @db.VarChar(150)

  salesPipeline_quotationID Int       @unique
  Quotation                 Quotation @relation(fields: [salesPipeline_quotationID], references: [quotation_id])
}

model VerticalMarket {
  verticalMarket_id       Int       @id @default(autoincrement())
  verticalMarket_name     String    @db.VarChar(50)
  verticalMarkert_created DateTime  @default(now())
  verticalMarket_updated  DateTime? @updatedAt

  // verticalMarket_customerID Int      @unique
  // customer                  Customer @relation(fields: [verticalMarket_customerID], references: [customer_id])
  customer Customer[]
  Group    Group[]
}

model Group {
  group_id      Int       @id @default(autoincrement())
  group_name    String    @db.VarChar(50)
  group_created DateTime  @default(now())
  group_updated DateTime? @updatedAt

  group_verticalMarket Int            @unique
  VerticalMarket       VerticalMarket @relation(fields: [group_verticalMarket], references: [verticalMarket_id])
}
